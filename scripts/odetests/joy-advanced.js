$(function() {
  
  /***
   * ## ???
   */
  module("Advanced Joy - ???");
  
  /***
   * ### conts : -> [[P] [Q] ..]
   * 
   * Pushes current continuations. Buggy, do not use.
   */
  test("conts", function() {
    Is.stack("conts", ""); // TODO
  });
  
  /***
   * ### autoput : -> I
   * 
   * Pushes current value of flag for automatic output, I = 0..2.
   */
  test("autoput", function() {
    Is.stack("autoput", ""); // TODO
  });
  
  /***
   * ### undeferror : -> I
   * 
   * Pushes current value of undefined-is-error flag.
   */
  test("undeferror", function() {
    Is.stack("undeferror", ""); // TODO
  });
  
  /***
   * ### echo : -> I
   * 
   * Pushes value of echo flag, I = 0..3.
   */
  test("echo", function() {
    Is.stack("echo", ""); // TODO
  });
  
  /***
   * ### clock : -> I
   * 
   * Pushes the integer value of current CPU usage in hundreds 
   * of a second.
   */
  test("clock", function() {
    Is.stack("clock", ""); // TODO
  });
  
  /***
   * ### time : -> I
   * 
   * Pushes the current time (in seconds since the Epoch).
   */
  test("time", function() {
    Is.stack("time", ""); // TODO
  });
  
  /***
  localtime : I -> T
  Converts a time I into a list T representing local time: [year month day hour minute second isdst yearday weekday]. Month is 1 = January ... 12 = December; isdst is a Boolean flagging daylight savings/summer time; weekday is 0 = Monday ... 7 = Sunday.
  gmtime : I -> T
  Converts a time I into a list T representing universal time: [year month day hour minute second isdst yearday weekday]. Month is 1 = January ... 12 = December; isdst is false; weekday is 0 = Monday ... 7 = Sunday.
  mktime : T -> I
  Converts a list T representing local time into a time I. T is in the format generated by localtime.
  strftime : T S1 -> S2
  Formats a list T in the format of localtime or gmtime using string S1 and pushes the result S2.
   */
  test("random time functions", function() {
    ok(false); // TODO
  });

});
